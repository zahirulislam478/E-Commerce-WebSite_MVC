@model E_Commerce_WebSite.ViewModels.CategoryViewModel

<input type="hidden" id="server-task" value="@ViewBag.Act" />

<div class="m-3">
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.Name, new { @class = "col-form-label col-form-label-sm col-2" })
        <div class="col-6">
            @Html.TextBoxFor(x => x.Name, new { @class = "form-control form-control-sm" })
            @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger", style = "font-size:x-small" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.Description, new { @class = "col-form-label col-form-label-sm col-2" })
        <div class="col-6">
            @Html.TextBoxFor(x => x.Description, new { @class = "form-control form-control-sm" })
            @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger", style = "font-size:x-small" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.Quantity, new { @class = "col-form-label col-form-label-sm col-2" })
        <div class="col-6">
            @Html.TextBoxFor(x => x.Quantity, new { @class = "form-control form-control-sm" })
            @Html.ValidationMessageFor(x => x.Quantity, "", new { @class = "text-danger", style = "font-size:x-small" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.AveragePrice, new { @class = "col-form-label col-form-label-sm col-2" })
        <div class="col-6">
            @Html.TextBoxFor(x => x.AveragePrice, new { @class = "form-control form-control-sm" })
            @Html.ValidationMessageFor(x => x.AveragePrice, "", new { @class = "text-danger", style = "font-size:x-small" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.TopSellingProduct, new { @class = "col-form-label col-form-label-sm col-2" })
        <div class="col-6">
            @Html.TextBoxFor(x => x.TopSellingProduct, new { @class = "form-control form-control-sm" })
            @Html.ValidationMessageFor(x => x.TopSellingProduct, "", new { @class = "text-danger", style = "font-size:x-small" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.FeaturedDate, new { @class = "col-form-label col-form-label-sm col-2" })
        <div class="col-6">
            @Html.TextBoxFor(x => x.FeaturedDate, new { @class = "form-control form-control-sm fd", type = "date" })
            @Html.ValidationMessageFor(x => x.FeaturedDate, "", new { @class = "text-danger", style = "font-size:x-small" })
        </div>
    </div>
    <div class="form-group row mb-1">
        @Html.LabelFor(x => x.Picture, new { @class = "col-form-label col-form-label-sm col-2" })
        <div class="col-6">
            @Html.TextBoxFor(x => x.Picture, new { @class = "form-control form-control-sm", type = "file" })
            @Html.ValidationMessageFor(x => x.Picture, "", new { @class = "text-danger", style = "font-size:x-small" })
        </div>
    </div>
    <div class="form-group row mb-1">
        <div class="form-check offset-2">
            @Html.CheckBoxFor(x => x.IsActive)
            <label class="form-check-label" for="flexCheckDefault">
                Is Available Now?
            </label>
        </div>
    </div>
</div>


<div class="col-12">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Product Image</th>
                <th>Brand</th>
                <th>Product Name</th>
                <th>Price</th>
                <th>Rating</th>
                <th>
                    <button type="submit" class="btn btn-secondary btn-sm add" name="act" value="add" formnovalidate><i class="bi bi-plus"></i></button>
                </th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < Model.Products.Count; i++)
            {
                <tr>
                    <td>
                        @Html.TextBoxFor(x => Model.Products[i].Image, new { @class = "form-control" ,type="file"})
                        @Html.ValidationMessageFor(x => Model.Products[i].Image, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.TextBoxFor(x => Model.Products[i].Brand, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => Model.Products[i].Brand, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.TextBoxFor(x => Model.Products[i].ProductName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => Model.Products[i].ProductName, "", new { @class = "text-danger" })

                    </td>
                    <td>
                        @Html.TextBoxFor(x => Model.Products[i].Price, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => Model.Products[i].Price, "", new { @class = "text-danger" })

                    </td>
                    <td>
                        @Html.TextBoxFor(x => Model.Products[i].Rating, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => Model.Products[i].Rating, "", new { @class = "text-danger" })

                    </td>
                    <td>
                        <button type="submit" class="btn btn-secondary btn-sm" name="act" value="remove_@i" formnovalidate><i class="bi bi-trash"></i></button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>